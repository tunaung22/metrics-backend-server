DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'metrics') THEN
        CREATE SCHEMA metrics;
    END IF;
END $EF$;
CREATE TABLE IF NOT EXISTS metrics.__ef_migrations_history (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'metrics') THEN
        CREATE SCHEMA metrics;
    END IF;
END $EF$;

CREATE SEQUENCE metrics.department_key_kpis_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.departments_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.key_kpi_submission_items_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.key_kpi_submissions_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.key_kpis_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.kpi_submission_periods_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.kpi_submissions_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE SEQUENCE metrics.user_titles_id_seq START WITH 1 INCREMENT BY 10 NO CYCLE;

CREATE TABLE metrics.application_roles (
    id text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    name character varying(256),
    normalized_name character varying(256),
    concurrency_stamp text,
    CONSTRAINT pk_application_roles PRIMARY KEY (id)
);

CREATE TABLE metrics.departments (
    id bigint NOT NULL,
    department_code uuid NOT NULL,
    department_name varchar(200) NOT NULL,
    is_deleted boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_departments PRIMARY KEY (id)
);

CREATE TABLE metrics.key_kpis (
    id bigint NOT NULL,
    metric_code uuid NOT NULL,
    metric_title text NOT NULL,
    description text,
    is_deleted boolean NOT NULL DEFAULT FALSE,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_key_kpis PRIMARY KEY (id)
);

CREATE TABLE metrics.kpi_submission_periods (
    id bigint NOT NULL,
    period_name varchar(20) NOT NULL,
    submission_start_date timestamp with time zone NOT NULL,
    submission_end_date timestamp with time zone NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_kpi_submission_periods PRIMARY KEY (id)
);

CREATE TABLE metrics.user_titles (
    id bigint NOT NULL,
    title_code uuid NOT NULL,
    title_name varchar (200) NOT NULL,
    description text,
    is_deleted boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    CONSTRAINT pk_user_titles PRIMARY KEY (id)
);

CREATE TABLE metrics.asp_net_role_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    role_id text NOT NULL,
    claim_type text,
    claim_value text,
    CONSTRAINT pk_asp_net_role_claims PRIMARY KEY (id),
    CONSTRAINT fk_asp_net_role_claims_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES metrics.application_roles (id) ON DELETE CASCADE
);

CREATE TABLE metrics.department_key_kpis (
    id bigint NOT NULL,
    is_deleted boolean NOT NULL DEFAULT FALSE,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    department_id bigint NOT NULL,
    key_kpi_metric_id bigint NOT NULL,
    CONSTRAINT pk_department_key_kpis PRIMARY KEY (id),
    CONSTRAINT fk_department_key_kpis_departments_department_id FOREIGN KEY (department_id) REFERENCES metrics.departments (id) ON DELETE RESTRICT,
    CONSTRAINT fk_department_key_kpis_key_kpis_key_kpi_metric_id FOREIGN KEY (key_kpi_metric_id) REFERENCES metrics.key_kpis (id) ON DELETE RESTRICT
);

CREATE TABLE metrics.application_users (
    id text NOT NULL,
    user_code varchar(200) NOT NULL,
    full_name varchar(200) NOT NULL,
    contact_address varchar(200) NOT NULL,
    profile_picture_url text NOT NULL,
    permission_level int NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    department_id bigint NOT NULL,
    user_title_id bigint NOT NULL,
    user_name character varying(256),
    normalized_user_name character varying(256),
    email character varying(256),
    normalized_email character varying(256),
    email_confirmed boolean NOT NULL,
    password_hash text,
    security_stamp text,
    concurrency_stamp text,
    phone_number varchar(200),
    phone_number_confirmed boolean NOT NULL,
    two_factor_enabled boolean NOT NULL,
    lockout_end timestamp with time zone,
    lockout_enabled boolean NOT NULL,
    access_failed_count integer NOT NULL,
    CONSTRAINT pk_application_users PRIMARY KEY (id),
    CONSTRAINT fk_application_users_departments_department_id FOREIGN KEY (department_id) REFERENCES metrics.departments (id) ON DELETE RESTRICT,
    CONSTRAINT fk_application_users_user_titles_user_title_id FOREIGN KEY (user_title_id) REFERENCES metrics.user_titles (id) ON DELETE RESTRICT
);

CREATE TABLE metrics.asp_net_user_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id text NOT NULL,
    claim_type text,
    claim_value text,
    CONSTRAINT pk_asp_net_user_claims PRIMARY KEY (id),
    CONSTRAINT fk_asp_net_user_claims_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES metrics.application_users (id) ON DELETE CASCADE
);

CREATE TABLE metrics.asp_net_user_logins (
    login_provider text NOT NULL,
    provider_key text NOT NULL,
    provider_display_name text,
    user_id text NOT NULL,
    CONSTRAINT pk_asp_net_user_logins PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_asp_net_user_logins_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES metrics.application_users (id) ON DELETE CASCADE
);

CREATE TABLE metrics.asp_net_user_roles (
    user_id text NOT NULL,
    role_id text NOT NULL,
    CONSTRAINT pk_asp_net_user_roles PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_asp_net_user_roles_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES metrics.application_roles (id) ON DELETE CASCADE,
    CONSTRAINT fk_asp_net_user_roles_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES metrics.application_users (id) ON DELETE CASCADE
);

CREATE TABLE metrics.asp_net_user_tokens (
    user_id text NOT NULL,
    login_provider text NOT NULL,
    name text NOT NULL,
    value text,
    CONSTRAINT pk_asp_net_user_tokens PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_asp_net_user_tokens_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES metrics.application_users (id) ON DELETE CASCADE
);

CREATE TABLE metrics.key_kpi_submissions (
    id bigint NOT NULL,
    submitted_at timestamp with time zone NOT NULL,
    submission_date date GENERATED ALWAYS AS ((submitted_at AT TIME ZONE 'UTC')::date) STORED NOT NULL,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    score_submission_period_id bigint NOT NULL,
    application_user_id text NOT NULL,
    department_id bigint,
    key_kpi_id bigint,
    CONSTRAINT pk_key_kpi_submissions PRIMARY KEY (id),
    CONSTRAINT fk_key_kpi_submissions_departments_department_id FOREIGN KEY (department_id) REFERENCES metrics.departments (id),
    CONSTRAINT fk_key_kpi_submissions_key_kpis_key_kpi_id FOREIGN KEY (key_kpi_id) REFERENCES metrics.key_kpis (id),
    CONSTRAINT fk_key_kpi_submissions_kpi_submission_periods_score_submission FOREIGN KEY (score_submission_period_id) REFERENCES metrics.kpi_submission_periods (id) ON DELETE RESTRICT,
    CONSTRAINT fk_key_kpi_submissions_users_application_user_id FOREIGN KEY (application_user_id) REFERENCES metrics.application_users (id) ON DELETE RESTRICT
);

CREATE TABLE metrics.kpi_submissions (
    id bigint NOT NULL,
    submitted_at timestamp with time zone NOT NULL,
    submission_date date GENERATED ALWAYS AS ((submitted_at AT TIME ZONE 'UTC')::date) STORED NOT NULL,
    score_value numeric(6,2) NOT NULL,
    positive_aspects text,
    negative_aspects text,
    comments text,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    kpi_submission_period_id bigint NOT NULL,
    department_id bigint NOT NULL,
    application_user_id text NOT NULL,
    CONSTRAINT pk_kpi_submissions PRIMARY KEY (id),
    CONSTRAINT ck_kpi_submissions_kpi_score_gt_0 CHECK (score_value >= 0),
    CONSTRAINT fk_kpi_submissions_departments_department_id FOREIGN KEY (department_id) REFERENCES metrics.departments (id) ON DELETE RESTRICT,
    CONSTRAINT fk_kpi_submissions_kpi_submission_periods_kpi_submission_perio FOREIGN KEY (kpi_submission_period_id) REFERENCES metrics.kpi_submission_periods (id) ON DELETE RESTRICT,
    CONSTRAINT fk_kpi_submissions_users_application_user_id FOREIGN KEY (application_user_id) REFERENCES metrics.application_users (id) ON DELETE RESTRICT
);

CREATE TABLE metrics.key_kpi_submission_items (
    id bigint NOT NULL,
    score_value numeric(4,2) NOT NULL,
    comments text,
    created_at timestamp with time zone NOT NULL,
    modified_at timestamp with time zone NOT NULL,
    key_kpi_submission_id bigint NOT NULL,
    department_id bigint NOT NULL,
    key_kpi_metrics_id bigint NOT NULL,
    CONSTRAINT pk_key_kpi_submission_items PRIMARY KEY (id),
    CONSTRAINT ck_kpi_submissions_kpi_score_gt_0 CHECK (score_value >= 0),
    CONSTRAINT fk_key_kpi_submission_items_departments_department_id FOREIGN KEY (department_id) REFERENCES metrics.departments (id) ON DELETE RESTRICT,
    CONSTRAINT fk_key_kpi_submission_items_key_kpi_submissions_key_kpi_submis FOREIGN KEY (key_kpi_submission_id) REFERENCES metrics.key_kpi_submissions (id) ON DELETE RESTRICT,
    CONSTRAINT fk_key_kpi_submission_items_key_kpis_key_kpi_metrics_id FOREIGN KEY (key_kpi_metrics_id) REFERENCES metrics.key_kpis (id) ON DELETE RESTRICT
);

CREATE UNIQUE INDEX "RoleNameIndex" ON metrics.application_roles (normalized_name);

CREATE INDEX "EmailIndex" ON metrics.application_users (normalized_email);

CREATE INDEX ix_application_users_department_id ON metrics.application_users (department_id);

CREATE UNIQUE INDEX ix_application_users_user_code ON metrics.application_users (user_code);

CREATE INDEX ix_application_users_user_title_id ON metrics.application_users (user_title_id);

CREATE UNIQUE INDEX "UserNameIndex" ON metrics.application_users (normalized_user_name);

CREATE INDEX ix_asp_net_role_claims_role_id ON metrics.asp_net_role_claims (role_id);

CREATE INDEX ix_asp_net_user_claims_user_id ON metrics.asp_net_user_claims (user_id);

CREATE INDEX ix_asp_net_user_logins_user_id ON metrics.asp_net_user_logins (user_id);

CREATE INDEX ix_asp_net_user_roles_role_id ON metrics.asp_net_user_roles (role_id);

CREATE INDEX ix_department_key_kpis_department_id ON metrics.department_key_kpis (department_id);

CREATE INDEX ix_department_key_kpis_key_kpi_metric_id ON metrics.department_key_kpis (key_kpi_metric_id);

CREATE UNIQUE INDEX ix_departments_department_code ON metrics.departments (department_code);

CREATE UNIQUE INDEX ix_departments_department_name ON metrics.departments (department_name);

CREATE INDEX ix_key_kpi_submission_items_department_id ON metrics.key_kpi_submission_items (department_id);

CREATE INDEX ix_key_kpi_submission_items_key_kpi_metrics_id ON metrics.key_kpi_submission_items (key_kpi_metrics_id);

CREATE UNIQUE INDEX ix_key_kpi_submission_items_key_kpi_submission_id_key_kpi_metr ON metrics.key_kpi_submission_items (key_kpi_submission_id, key_kpi_metrics_id, department_id);

CREATE INDEX ix_key_kpi_submissions_application_user_id ON metrics.key_kpi_submissions (application_user_id);

CREATE INDEX ix_key_kpi_submissions_department_id ON metrics.key_kpi_submissions (department_id);

CREATE INDEX ix_key_kpi_submissions_key_kpi_id ON metrics.key_kpi_submissions (key_kpi_id);

CREATE UNIQUE INDEX ix_key_kpi_submissions_score_submission_period_id_application_ ON metrics.key_kpi_submissions (score_submission_period_id, application_user_id);

CREATE UNIQUE INDEX ix_key_kpis_metric_code ON metrics.key_kpis (metric_code);

CREATE UNIQUE INDEX ix_key_kpis_metric_title ON metrics.key_kpis (metric_title);

CREATE UNIQUE INDEX ix_kpi_submission_periods_period_name ON metrics.kpi_submission_periods (period_name);

CREATE INDEX ix_kpi_submissions_application_user_id ON metrics.kpi_submissions (application_user_id);

CREATE INDEX ix_kpi_submissions_department_id ON metrics.kpi_submissions (department_id);

CREATE UNIQUE INDEX ix_kpi_submissions_kpi_submission_period_id_department_id_appl ON metrics.kpi_submissions (kpi_submission_period_id, department_id, application_user_id);

CREATE UNIQUE INDEX ix_user_titles_title_code ON metrics.user_titles (title_code);

CREATE UNIQUE INDEX ix_user_titles_title_name ON metrics.user_titles (title_name);

INSERT INTO metrics.__ef_migrations_history (migration_id, product_version)
VALUES ('20250523094849_000_InitDatabase', '9.0.2');

COMMIT;


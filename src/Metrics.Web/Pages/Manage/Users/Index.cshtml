@page
@model Metrics.Web.Pages.Manage.Users.IndexModel
@{
    ViewData["Title"] = "Manage Users";
    
    var isInSearchMode =  
        (!string.IsNullOrEmpty(Model.Department) && Model.Department != "All" )|| 
        !string.IsNullOrEmpty(Model.Search);
    
}


<div class="sectionTitle">
    <div class="d-flex align-items-center">
        <h3 class="flex-grow-1">Manage Users</h3>
        <span class="justify-content-end gap-2 me-4">
            <a class="btn btn-success" 
                asp-page="Register/Index"
                asp-route-returnUrl="@Url.Page("Index")"><i class="bi bi-plus-lg"></i> Register</a>
        </span>
    </div>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Dashboard/Index">Dashboard</a></li>
            <li class="breadcrumb-item active">Users</li>
        </ol>
    </nav>
</div>

<div class="container-fluid">

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        var color = Model.StatusMessage.StartsWith("Error") ? "danger" : "info";
        <div id="alert__actionFeedback" class="alert alert-@color alert-dismissible fade show mt-4 m-2" role="alert">
            @Html.Raw(Model.StatusMessage)
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* <partial name="~/Shared/_StatusMessage" for="StatusMessage" /> *@

    @* =============== Filter Bar / Action Bar =============================================== *@
    <div id="filter-bar" class="px-4 pt-4">
        <div class="row mb-3 align-items-center">

            <div class="col d-flex flex-grow-1">
                <text class="me-2">Total: </text> <strong>@Model.TotalItems</strong>
            </div>
            
            
            
            <div class="col-10">
                <form method="get">
                    <div class="row g-2 align-items-center">
                        <div class="col-auto">
                            <label for="">Show:</label>
                        </div>
                        <div class="col-1 me-2">
                           <select 
                                asp-for="Show"
                                onchange="this.form.submit()"
                                class="form-select form-select-sm"
                                aria-label="by Department">
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                    <option value="200">200</option>
                            </select>
                        </div>
                        <div class="col-auto">
                            <label for="">Department:</label>
                        </div>
                        <div class="col-3 me-2">
                            @* <input type="hidden" asp-for="Department"/> *@
                            <select 
                                asp-for="Department"
                                asp-items="Model.DepartmentList"
                                onchange="this.form.submit()"
                                class="form-select form-select-sm"
                                aria-label="by Department">
                                    <option value="All">All</option>
                            </select>
                        </div>
                        <div class="col-auto">
                            <label for="">Search:</label>
                        </div>
                        <div class="col me-2">
                            <input 
                                class="form-control form-control-sm"
                                type="text"
                                id="searchBox"
                                name="searchQuery"
                                placeholder="Search by code, name, department, etc,."
                                value="@HttpContext.Request.Query["searchQuery"]">
                        </div>
                        <div class="col-auto">
                            <button 
                                id="searchButton" 
                                class="btn btn-primary btn-sm me-2"
                                >Search</button>
                            <button 
                                id="clearButton"
                                type="button" 
                                class="btn btn-outline-secondary btn-sm" 
                                onclick="clearSearch()">Clear</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        @if(isInSearchMode) {
        <div class="row mb-3 text-center bg-light py-4 px-2 rounded-4">
            <h4>Search Result: <strong>@Model.QueryResultCount</strong></h4>
        </div>
        }
    </div>

    <div class="mt-4">
        <table id="userTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>User Code</th>
                    <th>Account</th>
                    <th>Name</th>
                    <th>Group</th>
                    <th>Department</th>
                    <th>Role</th>
                    @* <th>Address</th> *@
                    @* <th>Phone Number</th> *@
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.UsersList.Any())
                {
                    @foreach (var (e, idx) in Model.UsersList.Select((item, idx)=>(item, idx) ))
                    {
                        <tr class="align-middle">
                            <td class="px-2">@(idx+1)</td>
                            <td>@e.UserCode</td>
                            <td class="ps-4">@e.UserName</td>
                            <td class="ps-4">@e.FullName</td>
                            <td class="ps-4 text-success">
                                <strong>@e.UserTitleName</strong>
                            </td>
                            <td class="ps-4">@e.DepartmentName</td>
                            <td class="ps-4">
                                @foreach(var roleName in e.UserRoles)
                                {
                                    var color = roleName.StartsWith("Admin") ? "danger" : "success";
                                    <span class="text-@color"><strong>@roleName</strong></span>
                                    @* <span class="badge rounded-2 rounded-pill text-bg-@color">
                                        @roleName</span> *@
                                } </td>
                            @* <td>@e.Address</td> *@
                            @* <td>@e.PhoneNumber</td> *@
                            <td>
                                <div class="d-flex gap-2 justify-content-center">
                                    <a asp-page="Edit" 
                                        asp-route-userId="@e.Id"
                                        asp-route-returnUrl="@Request.Path"
                                        class="btn__actionButtons btn btn-sm btn-outline-primary my-2 my-lg-0 me-2">
                                        <i class="bi bi-pencil-square"> </i>Edit</a>
                                    <a asp-page="Lock" 
                                        asp-route-userId="@e.Id"
                                        asp-route-returnUrl="@Request.Path"
                                        class="btn__actionButtons btn btn-sm btn-@(e.IsActive?"outline-success":"outline-danger") my-2 my-lg-0 me-2"
                                        >
                                            @if (@e.IsActive) 
                                            { <i class="bi bi-lock-fill"></i> <text>Lock</text> }
                                            else 
                                            { <i class="bi bi-unlock-fill"></i> <text>Unlock</text> } 
                                    </a>
                                    <a asp-page="Reset" 
                                        asp-route-userId="@e.Id"
                                        asp-route-returnUrl="@Request.Path"
                                        class="btn__actionButtons btn btn-sm btn-outline-primary my-2 my-lg-0 me-2">
                                        <i class="bi bi-fingerprint"></i> Reset Password</a>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @if(!isInSearchMode)
    {
        <div class="p-4">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">

                    <li class="page-item @(!Model.ShowPrevious? "disabled":"")">
                        <a class="page-link"
                            asp-page="./Index"
                            asp-route-show=""
                            asp-route-currentPage="@(Model.CurrentPage -1)">Previous</a>
                    </li>

                    @for(int i = 1; i <= Model.TotalPages; i++)
                    {
                        @* Model.Pagination.Page = i; *@

                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link"
                                asp-page="./Index"
                                asp-route-show=""
                                asp-route-currentPage="@i"
                                aria-current=@(Model.CurrentPage == i
                                ? "page" 
                                : null)>
                                @i</a>
                        </li>
                    }

                    <li class="page-item @(!Model.ShowNext? "disabled":"")">
                        <a class="page-link" 
                            asp-page="./Index"
                            asp-route-show=""
                            asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a>
                    </li>

                </ul>
            </nav>
        </div>
    }
</div>

@section Styles {
    <style>
        .btn__actionButtons {
            width: auto;
        }
    </style>
}

@section Scripts {
    <script>
        const searchbox = document.getElementById("searchBox");
        const searchButton = document.getElementById('searchButton');
        const clearButton = document.getElementById('clearButton');
        @* searchbox.addEventListener('input', function() {
            searchButton.disabled = !searchbox.value.trim();
            console.log("input...");
        }); *@

        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key.toLowerCase() === 'k') {
                e.preventDefault();
                searchbox.focus();
                searchbox.select();
            } 
            else if (e.key === 'Escape') {
                if (document.activeElement === searchBox) {
                    clearSearch();
                }
            }
        });

        function clearSearch() {
            searchBox.value = '';
            if (!searchBox.value.trim()) {
                const url = new URL(window.location.href);
                const query = url.searchParams;
                query.delete('searchQuery');
            }
            window.location.href = window.location.pathname;
        }

        $(function() {
            var colActions = 5;
            new DataTable('#userTable', {
                paging: false,
                info: false,
                searching: false,
                autoWidth: true,
                initComplete: function() {
                    $('thead th').addClass('text-light text-center ');
                    $('thead th').addClass('bg-brand-color');
                }
            });

            $('#alert__actionFeedback').on('closed.bs.alert', function() {});
        });
    </script>
}
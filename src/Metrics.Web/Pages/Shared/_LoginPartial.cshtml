@using Microsoft.AspNetCore.Identity
@using Metrics.Application.Domains;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="loginPartial__userInfo"
            class="nav-link" 
            data-bs-toggle="tooltip" 
            data-bs-title="Profile" 
            data-bs-placement="bottom"
            asp-area="" 
            asp-page="/Account/Me/Index" 
            title="Profile">
            <strong>@UserManager.GetUserName(User)</strong></a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Account/Login", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link border-0">Logout</button>
        </form>
    </li>
}
else
{
    @* <li class="nav-item"> *@
    @*     <a class="nav-link text-dark" id="register" asp-area="" asp-page="/Account/Register">Register</a> *@

    @* </li> *@
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>

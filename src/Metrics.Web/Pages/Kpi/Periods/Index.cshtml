@page
@model Metrics.Web.Pages.Kpi.Periods.IndexModel
@{
    ViewData["Title"] = "KPI Periods";
}


<div class="d-flex align-items-center p-2">
    <h3>KPI Periods</h3>
    <div class="mx-4">
        <a class="btn btn-primary" 
            asp-page="Create"
            asp-route-returnUrl="@Url.Page("Index")">
            <i class="bi bi-plus-circle-fill"> </i>New
        </a>
    </div>
</div>

@* ========================================================================== *@
@if (!ModelState.IsValid)
{
    <div class="form bg-light p-4">
        <div class="alert alert-danger">
            <h4>There were some errors:</h4>
            <ul>
                @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    </div>
}

@* =============== Filter Bar =============================================== *@
@* <div id="filter-bar" class="d-flex bg-light p-4 mt-2"> *@
  @* <div class="col-sm-4 mx-2">
    <input class="form-control" placeholder="Filter..." />
  </div> *@
    @* <div class="col-auto mx-2">
        <select id="myDropdown" class="form-control">
            <option value=""></option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
    </div>
</div> *@

@* =============== Table ==================================================== *@
<div class="bg-light p-4">
    <table id="kpiPeriodTable" class="table table-striped">
        <thead>
            <tr>
                <th>Periods Name</th>
                <th>Submission Start Date</th>
                <th>Submission End Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.KpiPeriods != null)
            {

                @foreach (var period in Model.KpiPeriods)
                {
                    <tr>
                        <td>@period.PeriodName</td>
                        <td>@period.SubmissionStartDate.LocalDateTime.ToString("MMM dd, yyyy")</td>
                        <td>@period.SubmissionEndDate.LocalDateTime.Date.ToString("MMM dd, yyyy")</td>
                        <td>
                            <button class="btn btn-success">
                                Edit
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@if(Model.TotalPages > 0)
{
    <div class="p-4">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">

                <li class="page-item @(!Model.ShowPrevious? "disabled":"")">
                    <a class="page-link"
                        asp-page="./Index"
                        asp-route-currentPage="@(Model.CurrentPage -1)">Previous</a>
                </li>

                @for(int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item">
                        <a class="page-link"
                            asp-page="./Index"
                            asp-route-currentPage="@i"
                            >@i</a>
                    </li>
                }

                <li class="page-item @(!Model.ShowNext? "disabled":"")">
                    <a class="page-link" 
                        asp-page="./Index"
                        asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a>
                </li>

            </ul>
        </nav>
    </div>
}

@section Scripts {
    <script>
        new DataTable('#kpiPeriodTable', {
            paging: false,
            info: false,
            searching: false
        });

        $(function() {
            // update QueryString On Selection Changed
            $('#myDropdown').on('change', function() {
                var selectedValue = $(this).val();
                var currentUrl = window.location.href.split('?')[0]; // Get the base URL without query string
                var newUrl = currentUrl + '?display=' + selectedValue; // Construct new URL with query string
                // Update the URL in the browser without reloading the page
                @* window.history.pushState({ path: newUrl }, '', newUrl); *@
                window.location.href = newUrl;
            });
        });
    </script>
}